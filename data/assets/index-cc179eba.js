(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const c of e)if(c.type==="childList")for(const o of c.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function s(e){const c={};return e.integrity&&(c.integrity=e.integrity),e.referrerpolicy&&(c.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?c.credentials="include":e.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(e){if(e.ep)return;e.ep=!0;const c=s(e);fetch(e.href,c)}})();const m=document.querySelectorAll(".speaker"),E=document.querySelectorAll(".source"),f=document.querySelectorAll(".schedule"),p=document.querySelector(".disconnected-warn");let a;function h(){console.debug("Updating UI..."),console.debug(a),Object.entries(a.speakers).forEach(([t,n])=>{const s=m.item(t-1);s.classList.toggle("speaker--on",n),s.querySelector(".speaker-name > span").textContent=a.speakerNames[t]}),Object.entries(a.sources).forEach(([t,n])=>{const s=E.item(t-1);s.classList.toggle("source--selected",n),s.querySelector("button").disabled=n,s.querySelector(".source-name > span").textContent=a.inputsNames[t]}),Object.entries(a.schedules).forEach(([t,n])=>{f.item(t).classList.toggle("schedule--enabled",n)})}m.forEach((t,n)=>{t.querySelector(".speaker-toggle > button").addEventListener("click",()=>{const i=!a.speakers[n+1];fetch(`${{}.VITE_ENDPOINT??""}/out?id=${n+1}&state=${i?"on":"off"}`)});const r=t.querySelector(".speaker-name"),e=r.querySelector(".speaker-name > input"),c=r.querySelector(".speaker-name > span");t.classList.contains("speaker--disabled")&&c.removeAttribute("tabindex");const o=()=>{e.value=r.textContent.trim(),r.classList.add("speaker-name--editing"),e.focus()},d=()=>{r.classList.remove("speaker-name--editing"),fetch(`${{}.VITE_ENDPOINT??""}/set-speaker-name?id=${n+1}&name=${e.value}`)};c.addEventListener("click",o),c.addEventListener("focus",o),e.addEventListener("keypress",i=>i.key==="Enter"&&d()),e.addEventListener("blur",d)});E.forEach((t,n)=>{t.querySelector(".source-select > button").addEventListener("click",()=>{fetch(`${{}.VITE_ENDPOINT??""}/in?id=${n+1}`)});const r=t.querySelector(".source-name"),e=r.querySelector(".source-name > input"),c=r.querySelector(".source-name > span");t.classList.contains("source--disabled")&&c.removeAttribute("tabindex");const o=()=>{e.value=r.textContent.trim(),r.classList.add("source-name--editing"),e.focus()},d=()=>{r.classList.remove("source-name--editing"),fetch(`${{}.VITE_ENDPOINT??""}/set-input-name?id=${n+1}&name=${e.value}`)};c.addEventListener("click",o),c.addEventListener("focus",()=>o()),e.addEventListener("keypress",i=>{i.key==="Enter"&&d()}),e.addEventListener("blur",d)});f.forEach((t,n)=>{t.addEventListener("click",()=>{const s=!a.schedules[n];fetch(`${{}.VITE_ENDPOINT??""}/set-schedule?s=${n}&state=${s?"enabled":"disabled"}`)})});{const t=document.querySelector(".restart-check"),n=document.querySelector(".restart-btn");t.addEventListener("change",e=>{n.disabled=!e.target.checked}),t.addEventListener("keypress",e=>{e.key==="Enter"&&(console.log(`pressed ENTER : set to ${!t.checked}`),t.checked=!t.checked)}),n.addEventListener("click",()=>{fetch(`${{}.VITE_ENDPOINT??""}/restart`),l()});const s=document.querySelector(".reset-check"),r=document.querySelector(".reset-btn");s.addEventListener("change",e=>{r.disabled=!e.target.checked}),s.addEventListener("keydown",e=>{e.key==="Enter"&&(s.checked=!s.checked)}),r.addEventListener("click",()=>{fetch(`${{}.VITE_ENDPOINT??""}/reset`),l()})}const u=new EventSource(`${{}.VITE_ENDPOINT??""}/sse`);u.addEventListener("open",()=>{console.log("EventSource connected.")});u.addEventListener("speaker",t=>{console.debug(t.data),a=JSON.parse(t.data),h(),document.body.classList.remove("loading")});u.addEventListener("error",t=>{console.error("EventSource error. Details :"),console.error(t),l()});function l(t=5){document.body.classList.add("disconnected");const n=p.querySelector(".disconnected-warn-reload-sec");let s=t;const r=setInterval(()=>{s--,n.textContent=s,s<=0&&(clearInterval(r),window.location.reload())},1e3)}
